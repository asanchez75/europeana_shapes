@prefix sh:        <http://www.w3.org/ns/shacl#> .
@prefix xsd:       <http://www.w3.org/2001/XMLSchema#> .
@prefix dct:       <http://purl.org/dc/terms/> .
@prefix dc:        <http://purl.org/dc/elements/1.1/> .
@prefix foaf:      <http://xmlns.com/foaf/0.1/> .
@prefix ore:       <http://www.openarchives.org/ore/terms/> .
@prefix skos:      <http://www.w3.org/2004/02/skos/core#> .
@prefix rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:      <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdaGr2:    <http://rdvocab.info/ElementsGr2/> .
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#> .

@prefix owl:  <http://www.w3.org/2002/07/owl#> .

@prefix edm:  <http://www.europeana.eu/schemas/edm/> .
@prefix esc:  <http://www.europeana.eu/schemas/edm/shapes/categories#> .
@prefix esh:  <http://www.europeana.eu/schemas/edm/shapes/external/> .
@prefix :     <http://www.europeana.eu/schemas/edm/shapes/external/Place#> .
@base         <http://www.europeana.eu/schemas/edm/shapes/external/Place/> .

@prefix Agent:    <http://www.europeana.eu/schemas/edm/shapes/external/Agent#base> .
@prefix Concept:  <http://www.europeana.eu/schemas/edm/shapes/external/Concept#base> .
@prefix Place:    <http://www.europeana.eu/schemas/edm/shapes/external/Place#base> .
@prefix TimeSpan: <http://www.europeana.eu/schemas/edm/shapes/external/TimeSpan#base> .

################################################################################
# Shape Graph for edm:Place
################################################################################

:
  rdf:type owl:Ontology, sh:Graph ;
  owl:versionInfo "Draft version for edm:Place Class"^^xsd:string ;
  sh:shapesGraph <http://www.w3.org/ns/shacl> ;
.

################################################################################
# Base Shape for the edm:Place Class
################################################################################

:base
  a sh:Shape ;
  rdfs:subClassOf rdfs:Resource ;
  sh:scopeClass edm:Place ;

  # class level constraints
  sh:constraint [ sh:closed true ] ;

  # SKOS properties
  sh:property        <skos_prefLabel#type> ;
  sh:property        <skos_prefLabel#datatype> ;
  sh:property        <skos_prefLabel#cardinality> ;
  sh:property        <skos_altLabel#type> ;
  sh:property        <skos_altLabel#datatype> ;
  sh:property        <skos_altLabel#cardinality> ;
  sh:property        <skos_altLabel#redundancy> ;
  sh:property        <skos_note#type> ;
  sh:property        <skos_note#datatype> ;
  sh:property        <skos_note#cardinality> ;

  # WGS84 properties
  sh:property        <wgs84_lat#type> ;
  sh:property        <wgs84_lat#cardinality> ;
  sh:property        <wgs84_lat#literal> ;
  sh:property        <wgs84_lat#correlation> ;
  sh:property        <wgs84_long#type> ;
  sh:property        <wgs84_long#cardinality> ;
  sh:property        <wgs84_long#literal> ;
  sh:property        <wgs84_long#correlation> ;
  sh:property        <wgs84_alt#type> ;
  sh:property        <wgs84_alt#cardinality> ;
  sh:property        <wgs84_alt#literal> ;
  sh:constraint      <wgs84_alt#correlation> ;

  # DCTERMS properties
  sh:property        <dct_hasPart#type> ;
  sh:property        <dct_hasPart#cardinality> ;
  sh:property        <dct_hasPart#range-class> ;
  sh:property        <dct_isPartOf#type> ;
  sh:property        <dct_isPartOf#cardinality> ;
  sh:property        <dct_isPartOf#range-class> ;

  # EDM properties
  sh:property        <edm_isNextInSequence#type> ;
  sh:property        <edm_isNextInSequence#cardinality> ;
  sh:property        <edm_isNextInSequence#range-class> ;

  # OWL properties
  sh:property        <owl_sameAs#type> ;
  sh:property        <owl_sameAs#cardinality> ;
.

# skos:prefLabel ###############################################################

<skos_prefLabel#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate skos:prefLabel ;
  sh:nodeKind sh:Literal ;
.

<skos_prefLabel#datatype>
  a sh:PropertyConstraint ;
  dc:type esc:datatype ;
  sh:description "Ideally all skos:prefLabel should have a language tag" ;
  dc:subject "R-48-MISSING-LANGUAGE-TAGS" ;
  sh:predicate skos:prefLabel ;
  sh:datatype rdf:langString ;
  sh:severity sh:Warning ;
.

<skos_prefLabel#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS"
           , "R-49-PROPERTY-OCCURS-ONCE-PER-LANGUAGE-TAG" ;
  sh:predicate skos:prefLabel ;
  sh:minCount 0 ;
  sh:uniqueLang true ;
.


# skos:altLabel ################################################################

<skos_altLabel#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate skos:altLabel ;
  sh:nodeKind sh:Literal ;
.

<skos_altLabel#datatype>
  a sh:PropertyConstraint ;
  dc:type esc:datatype ;
  sh:description "Ideally all skos:altLabel should have a language tag" ;
  dc:subject "R-48-MISSING-LANGUAGE-TAGS" ;
  sh:predicate skos:altLabel ;
  sh:datatype rdf:langString ;
  sh:severity sh:Warning ;
.

<skos_altLabel#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate skos:altLabel ;
  sh:minCount 0 ;
.

<skos_altLabel#redundancy>
  a sh:PropertyConstraint ;
  dc:type esc:redundancy ;
  sh:description """skos:altLabel should not have the same labels than in 
                    skos:prefLabel""" ;
  dc:subject "R-10-DEFINE-DISJOINT-PROPERTIES" ;
  sh:predicate  skos:altLabel ;
  sh:notEquals  skos:prefLabel ;
  sh:severity sh:Warning ;
.

# skos:note ####################################################################

<skos_note#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate skos:note ;
  sh:nodeKind sh:Literal ;
.

<skos_note#datatype>
  a sh:PropertyConstraint ;
  dc:type esc:datatype ;
  sh:description "Ideally all skos:note should have a language tag" ;
  dc:subject "R-48-MISSING-LANGUAGE-TAGS" ;
  sh:predicate skos:note ;
  sh:datatype rdf:langString ;
  sh:severity sh:Warning ;
.

<skos_note#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate skos:note ;
  sh:minCount 0 ;
.

# wgs84_pos:lat ################################################################

<wgs84_lat#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate wgs84_pos:lat ;
  sh:nodeKind sh:Literal ;
.

<wgs84_lat#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate wgs84_pos:lat ;
  sh:minCount 0 ;
  sh:maxCount 1 ;
.

<wgs84_lat#literal>
  a sh:PropertyConstraint ;
  sh:description "The value of wgs84_pos:lat must be a decimal";
  dc:subject "R-44-PATTERN-MATCHING-ON-RDF-LITERALS" ;
  sh:predicate wgs84_pos:lat ;
  sh:pattern "^[-+]?[0-9]*[.]?[0-9]+$" ;
.

<wgs84_lat#correlation>
  a sh:PropertyConstraint ;
  sh:description "wgs84_pos:lat should be accompanied with a wgs84_pos:long";
  dc:subject "R-68-REQUIRED-PROPERTIES"
           , "R-67-BOOLEAN-PROPERTY-PATTERNS" ;
  dc:type esc:correlation ;
  sh:predicate wgs84_pos:lat ;
  sh:minCount 1 ;
  sh:filterShape [
      sh:property [
          sh:predicate wgs84_pos:long ;
          sh:minCount 1 ;
      ]
  ] ;
.

# wgs84_pos:long ###############################################################

<wgs84_long#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate wgs84_pos:long ;
  sh:nodeKind sh:Literal ;
.

<wgs84_long#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate wgs84_pos:long ;
  sh:minCount 0 ;
  sh:maxCount 1 ;
.

<wgs84_long#literal>
  a sh:PropertyConstraint ;
  sh:description "The value of wgs84_pos:long must be a decimal";
  dc:subject "R-44-PATTERN-MATCHING-ON-RDF-LITERALS" ;
  sh:predicate wgs84_pos:long ;
  sh:pattern "^[-+]?[0-9]*[.]?[0-9]+$" ;
.

<wgs84_long#correlation>
  a sh:PropertyConstraint ;
  sh:description "wgs84_pos:long should be accompanied with a wgs84_pos:lat";
  dc:subject "R-68-REQUIRED-PROPERTIES"
           , "R-67-BOOLEAN-PROPERTY-PATTERNS" ;
  dc:type esc:correlation ;
  sh:predicate wgs84_pos:long ;
  sh:minCount 1 ;
  sh:filterShape [
      sh:property [
          sh:predicate wgs84_pos:lat ;
          sh:minCount 1 ;
      ]
  ] ;
.

# wgs84_pos:alt ###############################################################

<wgs84_alt#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate wgs84_pos:alt ;
  sh:nodeKind sh:Literal ;
.

<wgs84_alt#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate wgs84_pos:alt ;
  sh:minCount 0 ;
  sh:maxCount 1 ;
.

<wgs84_alt#literal>
  a sh:PropertyConstraint ;
  sh:description "The value of wgs84_pos:alt must be a decimal";
  dc:subject "R-44-PATTERN-MATCHING-ON-RDF-LITERALS" ;
  sh:predicate wgs84_pos:alt ;
  sh:pattern "^[-+]?[0-9]*[.]?[0-9]+$" ;
.

<wgs84_alt#correlation>
  a sh:Constraint ;
  sh:description """wgs84_pos:alt should be accompanied with both wgs84_pos:lat
                    and wgs84_pos:long""";
  dc:subject "R-68-REQUIRED-PROPERTIES"
           , "R-67-BOOLEAN-PROPERTY-PATTERNS" ;
  dc:type esc:correlation ;
.

# dcterms:hasPart ##############################################################

<dct_hasPart#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate dct:hasPart ;
  sh:nodeKind sh:IRI ;
.

<dct_hasPart#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:hasPart ;
  sh:minCount 0 ;
.

<dct_hasPart#range-class>
  a sh:PropertyConstraint ;
  sh:description "dcterms:hasPart must refer to a valid edm:Place" ;
  dc:type esc:range-class ;
  dc:subject "R-225-VALIDATION-OF-CLASS-ASSOCIATION"
           , "R-171-VALIDATION-OF-URIS-BY-DEREFERENCING" ;
  sh:predicate dct:hasPart ;
  sh:valueShape :base ;
  sh:class edm:Place ;
.

# dcterms:isPartOf #############################################################

<dct_isPartOf#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate dct:isPartOf ;
  sh:nodeKind sh:IRI ;
.

<dct_isPartOf#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:isPartOf ;
  sh:minCount 0 ;
.

<dct_isPartOf#range-class>
  a sh:PropertyConstraint ;
  sh:description "dcterms:isPartOf must refer to a valid edm:Place" ;
  dc:type esc:range-class ;
  dc:subject "R-225-VALIDATION-OF-CLASS-ASSOCIATION"
           , "R-171-VALIDATION-OF-URIS-BY-DEREFERENCING" ;
  sh:predicate dct:hasPart ;
  sh:valueShape :base ;
  sh:class edm:Place ;
.

# edm:isNextInSequence #########################################################

<edm_isNextInSequence#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate edm:isNextInSequence ;
  sh:nodeKind sh:IRI ;
.

<edm_isNextInSequence#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate edm:isNextInSequence ;
  sh:minCount 0 ;
.

<edm_isNextInSequence#range-class>
  a sh:PropertyConstraint ;
  sh:description "The reference should be a valid edm:Place" ;
  dc:type esc:range-class ;
  dc:subject "R-171-VALIDATION-OF-URIS-BY-DEREFERENCING"
           , "R-225-VALIDATION-OF-CLASS-ASSOCIATION" ;
  sh:predicate edm:isNextInSequence ;
  sh:valueShape :base ;
  sh:class edm:Place ;
.

# owl:sameAs ###################################################################

<owl_sameAs#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate owl:sameAs ;
  sh:nodeKind sh:IRI ;
.

<owl_sameAs#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate owl:sameAs ;
  sh:minCount 0 ;
.
