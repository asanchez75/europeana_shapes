@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix dct:  <http://purl.org/dc/terms/> .
@prefix dc:   <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ore:  <http://www.openarchives.org/ore/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdaGr2: <http://rdvocab.info/ElementsGr2/> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .

@prefix edm:  <http://www.europeana.eu/schemas/edm/> .
@prefix esc:  <http://www.europeana.eu/schemas/edm/shapes/categories#> .
@prefix esh:  <http://www.europeana.eu/schemas/edm/shapes/external/> .
@prefix :     <http://www.europeana.eu/schemas/edm/shapes/external/WebResource#> .
@base         <http://www.europeana.eu/schemas/edm/shapes/external/WebResource/> .

@prefix Agent:    <http://www.europeana.eu/schemas/edm/shapes/external/Agent#base> .
@prefix Concept:  <http://www.europeana.eu/schemas/edm/shapes/external/Concept#base> .
@prefix Place:    <http://www.europeana.eu/schemas/edm/shapes/external/Place#base> .
@prefix TimeSpan: <http://www.europeana.eu/schemas/edm/shapes/external/TimeSpan#base> .

################################################################################
# Shape Graph for edm:WebResource
################################################################################

:
  rdf:type owl:Ontology, sh:Graph ;
  owl:versionInfo "Draft version for edm:WebResource Class"^^xsd:string ;
  sh:shapesGraph <http://www.w3.org/ns/shacl> ;
.

################################################################################
# Base Shape for the edm:WebResource Class
################################################################################

:base
  a sh:Shape ;
  rdfs:subClassOf rdfs:Resource ;
  sh:description """This shape gathers all constraints that apply to a 
                    edm:WebResource class""" ;

  sh:scopeClass edm:WebResource ;

  # class level constraints
  sh:constraint      [ sh:closed true ] ;

  # DC properties
  sh:property        <dc_description#cardinality> ;
  sh:property        <dc_format#cardinality> ;
  sh:property        <dc_rights#cardinality> ;
  sh:property        <dc_rights#redundancy> ;
  sh:property        <dc_source#cardinality> ;

  # DCTERMS properties
  sh:property        <dct_conformsTo#cardinality> ;
  sh:property        <dct_created#cardinality> ;
  sh:property        <dct_created#range-values> ;
  sh:property        <dct_created#correlation_1> ;
  sh:property        <dct_created#correlation_2> ;
  sh:property        <dct_extent#cardinality> ;
  sh:property        <dct_hasPartOf#type> ;
  sh:property        <dct_hasPart#cardinality> ;
  sh:property        <dct_hasPart#range-class> ;
  sh:property        <dct_isFormatOf#cardinality> ;
  sh:property        <dct_isPartOf#type> ;
  sh:property        <dct_isPartOf#cardinality> ;
  sh:property        <dct_isPartOf#range-class> ;
  sh:property        <dct_issued#cardinality> ;
  sh:property        <dct_issued#range-values> ;
  sh:property        <dct_issued#range-class> ;
  sh:property        <dct_issued#correlation> ;

  # EDM properties
  sh:property        <edm_isNextInSequence#type> ;
  sh:property        <edm_isNextInSequence#cardinality> ;
  sh:property        <edm_isNextInSequence#range-class> ;
  sh:property        <edm_isNextInSequence#correlation> ;
  sh:property        <edm_rights#type> ;
  sh:property        <edm_rights#cardinality> ;
  sh:property        <edm_rights#values> ;
.

# dc:description ###############################################################

<dc_description#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dc:description ;
  sh:minCount 0 ;
.

# dc:format ####################################################################

<dc_format#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dc:format ;
  sh:minCount 0 ;
.


# dc:rights ####################################################################

<dc_rights#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dc:rights ;
  sh:minCount 0 ;
.

<dc_rights#redundancy>
  a sh:PropertyConstraint ;
  dc:type esc:redundancy ;
  sh:description """dc:rights should not be the same as edm:rights, if true the 
                    field is redundant""" ;
  dc:subject "R-224-USE-SUB-SUPER-RELATIONS-IN-VALIDATION" ;
  sh:severity sh:Warning ;
  sh:predicate dc:rights ;
  sh:notEquals edm:rights ;
.


# dc:source ####################################################################

<dc_source#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dc:source ;
  sh:minCount 0 ;
.


# dct:conformsTo ###############################################################

<dct_conformsTo#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:conformsTo ;
  sh:minCount 0 ;
.


# dct:created ##################################################################

<dct_created#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:created ;
  sh:minCount 0 ;
.

#not in the spreadsheet
<dct_created#range-values>
  a sh:PropertyConstraint ;
  sh:description """Check that the value for date matches ISO 8601 starting with
                    the year and hyphenating the day and month parts: 
                    YYYY-MM-DD""" ;
  dc:type esc:range-value ;
  dc:subject "R-44-PATTERN-MATCHING-ON-RDF-LITERALS" ;
  sh:predicate dct:created ;
  sh:filterShape [ #restrict only to Literals
    sh:property [
      sh:predicate dct:created ;
      sh:nodeKind sh:Literal ;
    ]
  ] ;
  #does not check for valid dates but could be expanded
  sh:pattern "^[0-9]{4}[-][0-9]{2}[-][0-9]{2}$" ;
.

<dct_created#correlation_1>
  a sh:PropertyConstraint ;
  dc:type esc:correlation ;
  sh:description "dcterms:created must be equal or earlier than dcterms:issued";
  dc:type esc:correlation ;
  dc:subject "R-43-LITERAL-VALUE-COMPARISON" ;
  sh:predicate dct:created ;
  sh:lessThanOrEquals dct:issued ;
.

#ISSUE: values need to be typed as xsd:date!
<dct_created#correlation_2>
  a sh:PropertyConstraint ;

  sh:description """dcterms:created must be equal or earlier than dcterms:issued
                    and dcterms:created in edm:ProvidedCHO""";
  dc:type esc:correlation ;
  dc:subject "R-43-LITERAL-VALUE-COMPARISON" ;
  sh:predicate dct:created ;

  #requires a second focus node (ie. ProvidedCHO)
  #can though be implemented using SPARQL
.


# dct:extent ###################################################################

<dct_extent#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:extent ;
  sh:minCount 0 ;
.


# dct:hasPart ##################################################################

#not the same as in ProvidedCHO
<dct_hasPartOf#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate dct:hasPartOf ;
  sh:nodeKind sh:IRI ;
.

<dct_hasPart#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:hasPart ;
  sh:minCount 0 ;
.

<dct_hasPart#range-class>
  a sh:PropertyConstraint ;
  sh:description "dcterms:hasPart must refer to a valid edm:WebResource" ;
  dc:type esc:range-class ;
  dc:subject "R-225-VALIDATION-OF-CLASS-ASSOCIATION" ;
  sh:predicate dct:hasPart ;
  sh:valueShape :base ;
  sh:class edm:WebResource ;
.

# dct:isFormatOf ###############################################################

<dct_isFormatOf#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:isFormatOf ;
  sh:minCount 0 ;
.


# dct:isPartOf #################################################################

#not the same as in ProvidedCHO
<dct_isPartOf#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate dct:isPartOf ;
  sh:nodeKind sh:IRI ;
.

<dct_isPartOf#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:isPartOf ;
  sh:minCount 0 ;
.

<dct_isPartOf#range-class>
  a sh:PropertyConstraint ;
  sh:description "dcterms:isPartOf must refer to a valid edm:WebResource" ;
  dc:type esc:range-class ;
  dc:subject "R-225-VALIDATION-OF-CLASS-ASSOCIATION" ;
  sh:predicate dct:isPartOf ;
  sh:valueShape :base ;
  sh:class edm:WebResource ;
.

# dct:issued ###################################################################

<dct_issued#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate dct:issued ;
  sh:minCount 0 ;
.

#not in the spreadsheet
<dct_issued#range-values>
  a sh:PropertyConstraint ;
  sh:description """Check that the value for date matches ISO 8601 starting with
                    the year and hyphenating the day and month parts: 
                    YYYY-MM-DD""" ;
  dc:type esc:range-value ;
  dc:subject "R-44-PATTERN-MATCHING-ON-RDF-LITERALS" ;
  sh:predicate dct:issued ;
  sh:filterShape [ #restrict only to Literals
    sh:property [
      sh:predicate dct:issued ;
      sh:nodeKind sh:Literal ;
    ]
  ] ;
  #does not check for valid dates but could be expanded
  sh:pattern "^[0-9]{4}[-][0-9]{2}[-][0-9]{2}$" ;
.

#not in the spreadsheet
<dct_issued#range-class>
  a sh:PropertyConstraint ;
  sh:description """the reference should be one to a TimeSpan (the access to 
                    the data and the data itself should be formatted according 
                    to the TimeSpan specifications.)""" ;
  dc:type esc:range-class ;
  dc:subject "R-171-VALIDATION-OF-URIS-BY-DEREFERENCING" ;  
  sh:predicate dct:issued ;
  sh:filterShape [
      sh:property [
          sh:predicate dct:issued ;
          sh:nodeKind sh:IRI ;
      ]
  ] ;
  sh:valueShape TimeSpan: ;
  sh:class edm:TimeSpan ;
.

<dct_issued#correlation>
  a sh:PropertyConstraint ;
  dc:type esc:correlation ;
  sh:description """dcterms:issued must be equal or later than dcterms:created 
                    and dcterms:issued of the ProvidedCHO""" ;
  dc:type esc:correlation ;
  dc:subject "R-43-LITERAL-VALUE-COMPARISON" ;
  sh:predicate dct:issued ;

  #requires a second focus node (ie. ProvidedCHO)
  #can though be implemented using SPARQL
.

# edm:isNextInSequence #########################################################

<edm_isNextInSequence#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate edm:isNextInSequence ;
  sh:nodeKind sh:IRI ;
.

<edm_isNextInSequence#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate edm:isNextInSequence ;
  sh:minCount 0 ;
.

<edm_isNextInSequence#range-class>
  a sh:PropertyConstraint ;
  sh:description """The reference should be a valid edm:WebResource""" ;
  dc:type esc:range-class ;
  dc:subject "R-171-VALIDATION-OF-URIS-BY-DEREFERENCING"
           , "R-225-VALIDATION-OF-CLASS-ASSOCIATION" ;
  sh:predicate edm:isNextInSequence ;
  sh:valueShape :base ;
  sh:class edm:WebResource ;
.

<edm_isNextInSequence#correlation>
  a sh:PropertyConstraint ;
  dc:type esc:correlation ;
  sh:description """Both WebResources referred to and subject of this property 
                    must share the same parent, if present""" ;
# sh:description """Check that if WebResource 2 is PartOf WebResource X and 
#                   IsNextInSequence WebResource 1 and WebResource 2 are part of
#                   WebResource X""" ;
  dc:subject "?" ;
  sh:predicate edm:isNextInSequence ;

# Implement using a SPARQL query
.


# edm:rights ###################################################################

<edm_rights#type>
  a sh:PropertyConstraint ;
  dc:type esc:type ;
  sh:predicate edm:rights ;
  sh:nodeKind sh:IRI ;
.

<edm_rights#cardinality>
  a sh:PropertyConstraint ;
  dc:type esc:cardinality ;
  dc:subject "R-211-CARDINALITY-CONSTRAINTS" ;
  sh:predicate edm:rights;
  sh:minCount 0 ;
  sh:minCount 1 ;
.

<edm_rights#values>
  a sh:PropertyConstraint ;
  dc:type esc:values ;
  sh:description """Check the value is one of the controlled values: 
             http://pro.europeana.eu/web/guest/available-rights-statements """ ;
  dc:subject "R-210-DEFINE-EXCLUSIVELY-ALLOWED-PROPERTIES"
           , "R-30-DEFINE-VALUE-LISTS" ;
  sh:predicate edm:rights ;
  sh:in ( <http://creativecommons.org/publicdomain/mark/1.0/> 
          <http://www.europeana.eu/rights/out-of-copyright-non-commercial/>
          <http://creativecommons.org/publicdomain/zero/1.0/>
          <http://creativecommons.org/licenses/by/4.0/>
          <http://creativecommons.org/licenses/by-sa/4.0/>
          <http://creativecommons.org/licenses/by-nd/4.0/>
          <http://creativecommons.org/licenses/by-nc/4.0/>
          <http://creativecommons.org/licenses/by-nc-sa/4.0/>
          <http://creativecommons.org/licenses/by-nc-nd/4.0/>
          <http://www.europeana.eu/rights/rr-f/>
          <http://www.europeana.eu/rights/rr-p/> 
          <http://www.europeana.eu/rights/orphan-work-eu/>
          <http://www.europeana.eu/rights/unknown/> ) ;
.

